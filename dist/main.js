(()=>{"use strict";const e=(()=>{const e=document.querySelector(".main"),t=document.querySelector(".modal");let s="PLAY";const a=e=>{const t=e.split(" ");return{x:+t[0],y:+t[1]}};return{renderGameboard:(i,d,n,c=!1)=>{s="sample"===d?"PLACE":"PLAY";const l=(a=>{const i=document.createElement("div");i.classList.add("container");const r=document.createElement("div");r.classList.add(`${a}`),r.classList.add("board");const o=document.createElement("div");return o.classList.add("ships-display"),i.appendChild(r),i.appendChild(o),"PLACE"===s?t.appendChild(i):e.appendChild(i),i})(d);c&&l.firstChild.classList.add("active"),n.forEach((e=>l.firstChild.appendChild((e=>{const t=document.createElement("div");return t.classList.add("cell"),t.setAttribute("data-coords",`${e.coords.x} ${e.coords.y}`),e.hasShip&&t.classList.add("ship"),(e=>{"PLACE"===s?(e.addEventListener("click",(()=>{o.placeShip(a(e.getAttribute("data-coords")))})),e.addEventListener("mouseover",(()=>{o.showShip(a(e.getAttribute("data-coords")))}))):e.addEventListener("click",(()=>{r.playTurn(a(e.getAttribute("data-coords")))}))})(t),t})(e))))},updateShipsDisplay:(e,t,a=-1)=>{const i=document.querySelector(`.${e}`).nextElementSibling;i.textContent="",t.forEach(((e,t)=>{i.appendChild(((e,t=!1)=>{const a=document.createElement("div");return a.textContent=e.name,(e.isSunk()||"PLACE"===s&&t)&&a.classList.add("sunk"),a})(e,t<=a))}))},cellHit:e=>{const t=`${e.x} ${e.y}`;document.querySelector(`.active > [data-coords="${t}"]`).classList.add("hit")},shipSunk:e=>{e.forEach((e=>{document.querySelector(`.active > [data-coords="${e.x} ${e.y}"]`).classList.add("sunk")}))},toggleActiveBoard:()=>{Array.from(e.children).forEach((e=>{e.firstChild.classList.toggle("active")}))}}})(),t=t=>{const s=[],a=(e=>{const t=[];for(let s=0;s<e*e;s++)t.push({coords:{x:s%e,y:Math.floor(s/e)},hasShip:"",isShot:!1});return t})(t),i=e=>a[e.x+e.y*t];return{at:i,isValidAttack:e=>!i(e).isShot,isShipHit:e=>""!==i(e).hasShip,receiveAttack:t=>{const r=i(t);if(r.isShot=!0,e.cellHit(t),r.hasShip){const t=s.find((e=>e.name===r.hasShip));t.hit(),t.isSunk()&&(t=>{console.log(t);const s=a.filter((e=>e.hasShip===t)).map((e=>e.coords));e.shipSunk(s)})(t.name)}},setShip:(e,t,a="x")=>{s.push(e);let r=t;for(let t=0;t<e.getLength();t++)i(r).hasShip=e.name,"x"===a?r.x++:r.y++},isCollisions:e=>{for(const s of e){if(s.x>t-1||s.y>t-1)return!0;if(""!==i(s).hasShip)return!0}return!1},getBoard:()=>a,getShips:()=>s}},s=e=>({name:e,gameboard:t(10),isActive:!1}),a=(e,t)=>{const s=e;let a=0;return{name:t,getLength:()=>s,getHits:()=>a,hit:()=>{a++},isSunk:()=>a>=s}},i=e=>{const t=e.filter((e=>!e.isShot));return t[Math.floor(Math.random()*t.length)].coords},r=(()=>{const t=s("P1"),r=s("P2"),d=()=>t.isActive?r:t,n=s=>{const a=d().gameboard;a.isValidAttack(s)&&(a.receiveAttack(s),e.updateShipsDisplay(d().name,a.getShips()),a.isShipHit(s)||(t.isActive=!t.isActive,r.isActive=!r.isActive,e.toggleActiveBoard()),c())},c=async()=>{r.isActive&&(await(300,new Promise((e=>setTimeout(e,300)))),n(i(d().gameboard.getBoard())))};return{init:()=>{t.isActive=!0,t.gameboard=o.getSamplePlayer().gameboard,e.renderGameboard("P1",t.name,t.gameboard.getBoard()),e.updateShipsDisplay(t.name,t.gameboard.getShips()),(()=>{r.isActive=!1;let t=[a(3,"enemya"),a(2,"enemyb")];r.gameboard.setShip(t[0],{x:1,y:1},"x"),r.gameboard.setShip(t[1],{x:2,y:5},"y"),e.renderGameboard("P2",r.name,r.gameboard.getBoard(),!0),e.updateShipsDisplay(r.name,r.gameboard.getShips())})()},playTurn:n}})(),o=(()=>{const t=s("sample"),i=[a(4,"ak"),a(2,"b"),a(5,"c"),a(4,"d"),a(2,"e")];let o={shipNum:0,shipCoordsArray:[],axis:"x"};const d=document.querySelector(".modal"),n=e=>document.querySelector(`[data-coords="${e.x} ${e.y}"]`),c=e=>{0!==o.shipCoordsArray.length&&o.shipCoordsArray.forEach((e=>{n(e).classList.remove("temp"),n(e).classList.remove("invalid")})),o.shipCoordsArray=l(e),o.shipCoordsArray.forEach((e=>{n(e).classList.add("temp")})),h()||o.shipCoordsArray.forEach((e=>{n(e).classList.add("invalid")}))},l=e=>{let t=[],s=e;for(let e=0;e<i[o.shipNum].getLength()&&(t.push({x:s.x,y:s.y}),"x"===o.axis?s.x++:s.y++,!(s.x>9||s.y>9));e++);return t},h=()=>!t.gameboard.isCollisions(o.shipCoordsArray)&&o.shipCoordsArray.length===i[o.shipNum].getLength();return{init:()=>{e.renderGameboard("sample",t.name,t.gameboard.getBoard()),e.updateShipsDisplay(t.name,i),document.addEventListener("keyup",(({key:e})=>{"R"!==e&&"r"!==e||(o.axis="x"===o.axis?"y":"x",c(o.shipCoordsArray[0],o.axis))}))},placeShip:s=>{h()&&(t.gameboard.setShip(i[o.shipNum++],s,o.axis),o.shipCoordsArray.forEach((e=>n(e).classList.add("ship"))),e.updateShipsDisplay(t.name,i,o.shipNum-1),o.shipNum===i.length&&(d.remove(),r.init()))},showShip:c,getSamplePlayer:()=>t}})();o.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,