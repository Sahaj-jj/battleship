(()=>{"use strict";const t=(()=>{const t=document.querySelector(".P1"),e=document.querySelector(".P2"),a=()=>{e.classList.add("active")};return a(),{init:a,renderGameboard:(a,s,i)=>{const r="P1"===a?t:e;r.classList.add(s),i.forEach((t=>r.appendChild((t=>{const e=document.createElement("div");return e.classList.add("cell"),e.setAttribute("data-coords",`${t.coords.x} ${t.coords.y}`),t.hasShip&&e.classList.add("ship"),(t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-coords").split(" "),a={x:+e[0],y:+e[1]};o.playTurn(a)}))})(e),e})(t))))},cellHit:t=>{const e=`${t.x} ${t.y}`;document.querySelector(`.active > [data-coords="${e}"]`).classList.add("hit")},shipSunk:t=>{t.forEach((t=>{document.querySelector(`.active > [data-coords="${t.x} ${t.y}"]`).classList.add("sunk")}))},toggleActiveBoard:()=>{t.classList.toggle("active"),e.classList.toggle("active")}}})(),e=e=>{const a=[],s=(t=>{const e=[];for(let a=0;a<t*t;a++)e.push({coords:{x:a%t,y:Math.floor(a/t)},hasShip:"",isShot:!1});return e})(e),i=t=>s[t.x+t.y*e];return{at:i,isValidAttack:t=>!i(t).isShot,isShipHit:t=>""!==i(t).hasShip,receiveAttack:e=>{const o=i(e);if(o.isShot=!0,t.cellHit(e),o.hasShip){const e=a.find((t=>t.name===o.hasShip));e.hit(),e.isSunk()&&(e=>{console.log(e);const a=s.filter((t=>t.hasShip===e)).map((t=>t.coords));t.shipSunk(a)})(e.name)}},setShip:(t,e,s="x")=>{a.push(t);let o=e;for(let e=0;e<t.getLength();e++)i(o).hasShip=t.name,"x"===s?o.x++:o.y++},getBoard:()=>s}},a=t=>({name:t,gameboard:e(10),isActive:!1}),s=(t,e)=>{const a=t;let s=0;return{name:e,getLength:()=>a,getHits:()=>s,hit:()=>{s++},isSunk:()=>a===s}},i=t=>{const e=t.filter((t=>!t.isShot));return e[Math.floor(Math.random()*e.length)].coords},o=(()=>{const e=a("player"),o=a("enemy"),r=()=>e.isActive?o:e,c=a=>{const s=r().gameboard;s.isValidAttack(a)&&(s.receiveAttack(a),s.isShipHit(a)||(e.isActive=!e.isActive,o.isActive=!o.isActive,t.toggleActiveBoard()),n())},n=async()=>{o.isActive&&(await(300,new Promise((t=>setTimeout(t,300)))),c(i(r().gameboard.getBoard())))};return{init:()=>{(()=>{e.isActive=!0;let a=[s(4,"ak"),s(2,"b")];e.gameboard.setShip(a[0],{x:1,y:2},"x"),e.gameboard.setShip(a[1],{x:2,y:5},"y"),t.renderGameboard("P1",e.name,e.gameboard.getBoard())})(),(()=>{o.isActive=!1;let e=[s(3,"enemya"),s(2,"enemyb")];o.gameboard.setShip(e[0],{x:1,y:1},"x"),o.gameboard.setShip(e[1],{x:2,y:5},"y"),t.renderGameboard("P2",o.name,o.gameboard.getBoard())})()},playTurn:c}})();o.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,